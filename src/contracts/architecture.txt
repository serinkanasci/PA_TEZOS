#todo

Smart Contracts (PascaLigo) : 
- Index 
  - Administration 
     # var
     type admin is address
     # functions
     only_admin()
     change_admin()
     get_admin()
  - User
     type balances is map(addr, nom_nft)
     # functions
     create_user()
     banned_users() #only_admin
     banned_access_code() #only_admin
  - NFT
     type base_uri (ipfs)
     type unique key --> colonne bc
     
     # functions
     safe_transfer_from(_from_to, token_id)
     safe_transfer_from(_from_to, token_id, data :bytes)
     set_approval_for_all(operator: addr, approved:bool)
     set_base_uri(string)
     set_cost() #only_admin
     set_max_mint_amount()
     set_nft_by_unique_address()
     transfer_from(_from_to, token_id)
     transfer_ownership(owner)
     withdraw()
     mint()
  - UserRiskProfile
     condition : age/revenu/metier/si prêt en court = user_risk_status + plafond_max
     # functions
     set_user_risk_status()
     get_user_risk_status()
  - FinancingPlan
    montant = prêt du bien / années 
    en fonction du profil de risque

Un oracle est à prévoir pour les tâches suivantes :
- Gestion des exécutions planifiées,
  timestamp sc -> déclencher paymen
- Gestion du cours de Tezos en Euro.
  SC externe:   informations actualisées
  site -> SC
  ou bdd externe 
